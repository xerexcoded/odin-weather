{"version":3,"sources":["components/Header.js","components/Switch.js","components/Location.js","App.js","index.js"],"names":["Header","props","className","style","gap","fontSize","width","alt","src","cursor","onClick","getUserLocation","borderRadius","padding","placeholder","onKeyPress","e","key","target","value","getLocation","errorLoading","Switch","onChange","toggleFormat","checked","degree","type","display","color","zIndex","position","Location","useState","sunSetRise","setSunSetRise","useEffect","convertFromEcho","location","sys","sunrise","sunset","convertToFarenheits","v","Math","round","rise","set","Date","toLocaleTimeString","navigator","language","hour","minute","margin","name","country","main","temp","weather","icon","feels_like","description","humidity","App","setLocation","setDegree","isloading","setIsloading","locationd","setLocationd","errorloading","setErrorloading","setHour","api","myInit","mode","myRequest","Request","a","fetch","response","ok","Error","json","data","console","error","log","setInterval","date","second","length","fetchResults","getIntialLocation","marginBottom","geolocation","getCurrentPosition","p","coords","latitude","longitude","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.771720a4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <div>\n      <div\n        className=\"align-center\"\n        style={{\n          gap: \"10px\",\n          fontSize: \"30px\",\n        }}\n      >\n        <img\n          style={{ width: \"60px\" }}\n          alt=\"app-logo\"\n          \n          src=\"https://image.freepik.com/free-vector/global-warming-effect-environmental-conservation-vector_53876-61934.jpg\"\n        ></img>\n        <p>Current Weather</p>\n      </div>\n      <br></br>\n      <div\n        className=\"align-center\"\n        style={{\n          gap: \"20px\",\n        }}\n      >\n        <img\n          style={{ cursor: \"pointer\", width: \"30px\" }}\n          alt=\"location access\"\n          onClick={() => props.getUserLocation()}\n          src=\"https://img.icons8.com/ios-filled/50/000000/marker.png\"\n        ></img>\n        <input\n          style={{ borderRadius: \"15px\", padding: \"5px\"  }}\n          className=\"input-box\"\n  \n          placeholder=\"weather where...\"\n          onKeyPress={(e) =>\n            e.key === \"Enter\" && e.target.value !== \"\"\n              ? props.getLocation(e)\n              : null\n          }\n        ></input>\n      </div>\n      <p className=\"not-found\">\n        {props.errorLoading ? \"Ops, something went wrong\" : null}\n      </p>\n    </div>\n  );\n};\n\nexport default Header;\n","\nimport React from \"react\";\n\nconst Switch = (props) => {\n  return (\n    <div className=\"align-center\">\n      <label className=\"switch\">\n        <input\n          onChange={() => props.toggleFormat()}\n          checked={props.degree}\n          type=\"checkbox\"\n        ></input>\n        <span className=\"slider round align-center\">\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"20px\",\n              color: \"black\",\n              zIndex: 2,\n              position: \"relative\",\n              fontSize: \"12px\",\n            }}\n          >\n            <span>C</span>\n            <span>F</span>\n          </div>\n        </span>\n      </label>\n    </div>\n  );\n};\n\nexport default Switch;\n","import React, { useEffect, useState } from \"react\";\n\nconst Location = (props) => {\n  const [sunSetRise, setSunSetRise] = useState([]);\n\n  useEffect(\n    () =>\n      convertFromEcho(props.location.sys.sunrise, props.location.sys.sunset),\n    [props.location]\n  );\n\n  const getDegree = () => (props.degree ? \"째F\" : \"째C\");\n\n  const convertToFarenheits = (v) => Math.round((v * 9) / 5) + 32;\n\n  const convertFromEcho = (rise, set) => {\n    setSunSetRise([\n      new Date(rise * 1000).toLocaleTimeString(navigator.language, {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      }),\n      new Date(set * 1000).toLocaleTimeString(navigator.language, {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      }),\n    ]);\n  };\n\n  return (\n    <div className=\"location-info\">\n      <div\n        className=\"align-center\"\n        style={{\n          gap: \"20px\",\n          fontSize: \"40px\",\n          margin: \"0px\",\n        }}\n      >\n        <p style={{ margin: 0 }}>\n          {props.location.name}, {props.location.sys.country}\n        </p>\n        <img\n          alt=\"flag\"\n          src={`https://www.countryflags.io/${props.location.sys.country}/flat/64.png`}\n        ></img>\n      </div>\n      <div>\n        <p\n          className=\"align-center\"\n          style={{\n            fontSize: \"30px\",\n          }}\n        >\n          {props.degree\n            ? convertToFarenheits(Math.round(props.location.main.temp))\n            : Math.round(props.location.main.temp)}\n          {props.degree ? \"째F\" : \"째C\"}\n\n          <img\n            alt=\"weather-icon\"\n            src={`http://openweathermap.org/img/wn/${props.location.weather[0].icon}@2x.png`}\n          ></img>\n        </p>\n        <p>\n          Feels like{\" \"}\n          {props.degree\n            ? convertToFarenheits(Math.round(props.location.main.feels_like))\n            : Math.round(props.location.main.feels_like)}\n          {getDegree()} | {props.location.weather[0].description} |\n          Humidity: {props.location.main.humidity}%\n        </p>\n        <p>\n          Sunrise: {sunSetRise[0]} | Sunset: {sunSetRise[1]}\n        </p>\n        <p></p>\n        <br></br>\n      </div>\n    </div>\n  );\n};\n\nexport default Location;\n","import './App.css';\nimport {useState,useEffect} from 'react';\nimport header from './header';\nimport Header from './components/Header';\nimport Switch from './components/Switch';\nimport Location from './components/Location';\nfunction App() {\n   const [location,setLocation] =useState({});\n   const [degree,setDegree] = useState(false);\n   const [isloading,setIsloading] =useState(true);\n   const [locationd,setLocationd] = useState ([]);\n   const [errorloading,setErrorloading] = useState(false);\n   const [hour,setHour] =useState(\"\");\n   const api = (v) => `https://api.openweathermap.org/data/2.5/weather?q=${v}&appid=d62a1b8da4df6db0e12ea8490d510924&units=metric`\n   \n   const myInit ={ mode : \"cors\"};\n   const myRequest = (v) => new Request(api(v),myInit);\n\n   const toggleFormat = () => setDegree(!degree);\n\n   //bottom of the app\n   setInterval(()=>{\n     var date = new Date();\n     setHour(\n       date.toLocaleTimeString(navigator.language,{\n         hour : \"2-digit\",\n         minute : \"2-digit\",\n         second : \"2-digit\",\n       })\n     );\n   },1000)\n\n  //get location from device\n  function getUserLocation() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const p =[\n        Math.round(position.coords.latitude),\n        Math.round(position.coords.longitude),\n      ];\n      setLocationd(p);\n    })\n  }\n  useEffect(() => {\n    if(locationd.length!== 0) {fetchResults();}\n  },[locationd]) \n\n  //get location data for the device\n  async function fetchResults(){\n   setIsloading(true);\n    try{\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${locationd[0]}&lon=${locationd[1]}&appid=d62a1b8da4df6db0e12ea8490d510924&units=metric`,myInit);\n      if(!response.ok){\n        throw new Error(\"bad network request\");\n      }\n      const data =await response.json();\n      setLocation(data);\n      setErrorloading(false);\n      setIsloading(false);\n    }catch(e){\n      setIsloading(false);\n      setErrorloading(true);\n      console.error(e);\n\n    }\n\n  }\n //get location from input\n  async function getLocation(e){\n    setIsloading(true)\n    try{\n      const response =await fetch(myRequest(e.target.value));\n      if(!response.ok)\n      {\n        throw new Error(\"bad request \");\n      }\n      const data = await response.json();\n      setLocation(data);\n      e.target.value=\"\";\n      setIsloading(false);\n      setErrorloading(false);\n    }catch(e){\n      setErrorloading(true);\n      setIsloading(false);\n      console.log(e);\n\n    }\n  }\n\n//initial location \n  async function getIntialLocation(){\n    setIsloading(true);\n    try{\n        const response =await fetch(api(\"kolkata\"),myInit);\n       if(!response.ok){throw new Error(\"bad request\");}\n      const data = await response.json()\n     \n      setErrorloading(false);\n      setLocation(data); \n      setIsloading(false)\n\n    }catch(e){\n\n      setErrorloading(true)\n      setIsloading(false)\n      console.log(e)\n    }\n  }\n useEffect(()=>{getIntialLocation()},[]) //run this when app is loaded \n\n\n\n\n  return (\n    <div className=\"main-div\" style={{marginBottom:\"20px\"}}>\n    <header/>\n    <div className=\"App\">\n    <Header errorloading={errorloading} getUserLocation={getUserLocation} getLocation={getLocation}/>\n    {isloading?(\n      <p style={{fontSize:\"45px\"}}>Uno momento / ek minute / just a minute</p>\n    ):(<div>\n        <Location degree={degree} location={location}   />\n        <Switch\n          toggleFormat={() => toggleFormat()}\n          degree={degree}\n\n      />\n      <p>{hour}</p>\n       <a href=\"https://github.com/xerexcoded\" target=\"_blank\" className=\"linkg\">Arnav Banerjee</a>\n      </div>)}\n      </div>\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}